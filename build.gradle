buildscript {
    repositories {
        jcenter()
    }
    
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'kotlin'
apply plugin: 'java'
apply plugin: 'application'

group 'projetift604'
version '0.0.1'
mainClassName = "io.ktor.server.netty.EngineMain"

kotlin.experimental.coroutines = 'enable'

sourceSets {
    main.kotlin.srcDirs = main.java.srcDirs = ['src']
    test.kotlin.srcDirs = test.java.srcDirs = ['test']
    main.resources.srcDirs = ['resources']
    test.resources.srcDirs = ['testresources']
}

repositories {
    mavenLocal()
    jcenter()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile "io.ktor:ktor-server-netty:$ktor_version"
    compile "ch.qos.logback:logback-classic:$logback_version"

    compile "io.ktor:ktor-html-builder:$ktor_version"
    compile "com.fasterxml.jackson.module:jackson-module-kotlin:2.9.+"
    compile "io.ktor:ktor-gson:$ktor_version"
    compile "io.ktor:ktor-server-sessions:$ktor_version"

    compile "io.ktor:ktor-serialization:$ktor_version"
    compile "io.ktor:ktor-network-tls:$ktor_version"

    compile "io.ktor:ktor-client-js:$ktor_version"
    compile "io.ktor:ktor-client-okhttp:$ktor_version"

    compile group: 'joda-time', name: 'joda-time', version: '2.10.5'
    compile group: 'org.json', name: 'json', version: '20190722'

    testCompile "io.ktor:ktor-server-tests:$ktor_version"
}
/*
task generateJks(type: JavaExec, dependsOn: 'classes') {
    classpath = sourceSets.main.runtimeClasspath
    main = 'src.server.CertificateGenerator'
}

getTasksByName("run", false).first().dependsOn('generateJks')
*/